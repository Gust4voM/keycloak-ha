version: '3'
services:
  keycloak:
      restart: always
      image: quay.io/keycloak/keycloak:legacy
      command:
        - -b
        - 0.0.0.0
        - -Djgroups.bind_addr=10.13.11.132 #IP del HOST
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: 10.13.11.134 #IP de la BD
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: password
        KEYCLOAK_HOSTNAME: keycloak.trp.com.ar
        PROXY_ADDRESS_FORWARDING: "true"
        KEYCLOAK_FRONTEND_URL: https://keycloak.trp.com.ar
        KEYCLOAK_URL: http://keycloak:8080/
        CACHE_OWNERS_AUTH_SESSIONS_COUNT: 2 #En cuantos nodos replica el cache
        CACHE_OWNERS_COUNT: 2
        JGROUPS_DISCOVERY_EXTERNAL_IP: keycloak #O IP DEL HOST
          #JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
        JGROUPS_DISCOVERY_PROTOCOL: TCPPING
        #Estas propiedades tienen un mix de lo que necesitaria el JDBC_PING y el TCPPING, quedan aca para prender y segun sea necesario
        #Hay que setear initial_hosts con las ips de nuestros nodos de KC
        JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))",initial_hosts="nodo1[7600],nodo2[7600]",timeout="10000"
      network_mode: host
